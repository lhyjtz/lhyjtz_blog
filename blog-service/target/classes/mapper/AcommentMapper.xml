<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lcyjtz.mapper.AcommentMapper" >
  <resultMap id="BaseResultMap" type="com.lcyjtz.entity.Acomment" >
    <id column="AComment_ID" property="acommentId" jdbcType="INTEGER" />
    <result column="AComment_ArticleID" property="acommentArticleid" jdbcType="INTEGER" />
    <result column="AComment_Content" property="acommentContent" jdbcType="VARCHAR" />
    <result column="AComment_UserName" property="acommentUsername" jdbcType="VARCHAR" />
    <result column="AComment_Data" property="acommentData" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    AComment_ID, AComment_ArticleID, AComment_Content, AComment_UserName, AComment_Data
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lcyjtz.entity.AcommentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from acomment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from acomment
    where AComment_ID = #{acommentId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from acomment
    where AComment_ID = #{acommentId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lcyjtz.entity.AcommentExample" >
    delete from acomment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lcyjtz.entity.Acomment" >
    insert into acomment (AComment_ID, AComment_ArticleID, AComment_Content, 
      AComment_UserName, AComment_Data)
    values (#{acommentId,jdbcType=INTEGER}, #{acommentArticleid,jdbcType=INTEGER}, #{acommentContent,jdbcType=VARCHAR}, 
      #{acommentUsername,jdbcType=VARCHAR}, #{acommentData,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.lcyjtz.entity.Acomment" >
    insert into acomment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="acommentId != null" >
        AComment_ID,
      </if>
      <if test="acommentArticleid != null" >
        AComment_ArticleID,
      </if>
      <if test="acommentContent != null" >
        AComment_Content,
      </if>
      <if test="acommentUsername != null" >
        AComment_UserName,
      </if>
      <if test="acommentData != null" >
        AComment_Data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="acommentId != null" >
        #{acommentId,jdbcType=INTEGER},
      </if>
      <if test="acommentArticleid != null" >
        #{acommentArticleid,jdbcType=INTEGER},
      </if>
      <if test="acommentContent != null" >
        #{acommentContent,jdbcType=VARCHAR},
      </if>
      <if test="acommentUsername != null" >
        #{acommentUsername,jdbcType=VARCHAR},
      </if>
      <if test="acommentData != null" >
        #{acommentData,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lcyjtz.entity.AcommentExample" resultType="java.lang.Integer" >
    select count(*) from acomment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update acomment
    <set >
      <if test="record.acommentId != null" >
        AComment_ID = #{record.acommentId,jdbcType=INTEGER},
      </if>
      <if test="record.acommentArticleid != null" >
        AComment_ArticleID = #{record.acommentArticleid,jdbcType=INTEGER},
      </if>
      <if test="record.acommentContent != null" >
        AComment_Content = #{record.acommentContent,jdbcType=VARCHAR},
      </if>
      <if test="record.acommentUsername != null" >
        AComment_UserName = #{record.acommentUsername,jdbcType=VARCHAR},
      </if>
      <if test="record.acommentData != null" >
        AComment_Data = #{record.acommentData,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update acomment
    set AComment_ID = #{record.acommentId,jdbcType=INTEGER},
      AComment_ArticleID = #{record.acommentArticleid,jdbcType=INTEGER},
      AComment_Content = #{record.acommentContent,jdbcType=VARCHAR},
      AComment_UserName = #{record.acommentUsername,jdbcType=VARCHAR},
      AComment_Data = #{record.acommentData,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lcyjtz.entity.Acomment" >
    update acomment
    <set >
      <if test="acommentArticleid != null" >
        AComment_ArticleID = #{acommentArticleid,jdbcType=INTEGER},
      </if>
      <if test="acommentContent != null" >
        AComment_Content = #{acommentContent,jdbcType=VARCHAR},
      </if>
      <if test="acommentUsername != null" >
        AComment_UserName = #{acommentUsername,jdbcType=VARCHAR},
      </if>
      <if test="acommentData != null" >
        AComment_Data = #{acommentData,jdbcType=VARCHAR},
      </if>
    </set>
    where AComment_ID = #{acommentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lcyjtz.entity.Acomment" >
    update acomment
    set AComment_ArticleID = #{acommentArticleid,jdbcType=INTEGER},
      AComment_Content = #{acommentContent,jdbcType=VARCHAR},
      AComment_UserName = #{acommentUsername,jdbcType=VARCHAR},
      AComment_Data = #{acommentData,jdbcType=VARCHAR}
    where AComment_ID = #{acommentId,jdbcType=INTEGER}
  </update>
</mapper>